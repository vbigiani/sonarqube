apiVersion: v1
kind: Template
labels:
  template: jenkins-dockerhub-persistent-template
metadata:
  annotations:
    description: |-
      Jenkins service, with persistent storage.
    iconClass: icon-jenkins
    tags: instant-app,jenkins
  name: jenkins-dockerhub-persistent
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: jenkins
  spec:
    dockerImageRepository: docker.io/vbigiani/jenkins
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: ${JENKINS_SERVICE_NAME}
  spec:
    portalIP: ""
    ports:
    - name: web
      nodePort: 0
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      name: ${JENKINS_SERVICE_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    name: jenkins
  spec:
    to:
      kind: Service
      name: ${JENKINS_SERVICE_NAME}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${JENKINS_SERVICE_NAME}
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${VOLUME_CAPACITY}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    name: ${JENKINS_SERVICE_NAME}
  spec:
    replicas: 1
    selector:
      name: ${JENKINS_SERVICE_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: ${JENKINS_SERVICE_NAME}
      spec:
        containers:
        - capabilities: {}
          image: jenkins
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /login
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 3
          name: jenkins
          readinessProbe:
            httpGet:
              path: /login
              port: 8080
            initialDelaySeconds: 3
            timeoutSeconds: 3
          resources:
            limits:
              memory: ${MEMORY_LIMIT}
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/jenkins_home
            name: ${JENKINS_SERVICE_NAME}-data
          - mountPath: /var/run/docker.sock
            name: ${JENKINS_SERVICE_NAME}-docker-sock
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        volumes:
        - name: ${JENKINS_SERVICE_NAME}-data
          persistentVolumeClaim:
            claimName: ${JENKINS_SERVICE_NAME}
        - name: ${JENKINS_SERVICE_NAME}-docker-sock
          hostPath:
            path: /var/run/docker.sock
            type: File
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - jenkins
        from:
          kind: ImageStreamTag
          name: jenkins:${JENKINS_VERSION}
      type: ImageChange
    - type: ConfigChange
parameters:
- description: Maximum amount of memory the container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  value: 1Gi
- description: The name of the OpenShift Service exposed for the Jenkins container.
  displayName: Jenkins Service Name
  name: JENKINS_SERVICE_NAME
  value: jenkins
- description: Volume space available for data, e.g. 512Mi, 2Gi.
  displayName: Volume Capacity
  name: VOLUME_CAPACITY
  required: true
  value: 1Gi
- description: Jenkins version to deploy
  displayName: Jenkins version
  name: JENKINS_VERSION
  required: true
  value: "1.6.2"
